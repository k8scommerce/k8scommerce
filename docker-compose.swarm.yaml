version: '3.9'

services:
  ###################
  # Services
  ###################

  client:
    hostname: client
    restart: unless-stopped
    build:
      context: ./services/api/client
      dockerfile: Dockerfile.swarm
    image: 127.0.0.1:5000/client
    deploy:
      replicas: 2
    depends_on:
      - product
    volumes:
      - ./env:/env
    ports:
      - "8888:8888"
    # networks:
    #   - ecomm

  product:
    hostname: product
    restart: unless-stopped
    build:
      context: ./services/rpc/product/
      dockerfile: Dockerfile.swarm
    image: 127.0.0.1:5000/product
    deploy:
      replicas: 3
    depends_on:
      - postgres
      - etcd1
      - etcd2
      - etcd3
    environment:
      - ECOMM_CONFIG=/env/config.dc.yaml
    volumes:
      - ./env:/env
    # networks:
    #   - ecomm

    ###################
    # Support
    ###################

  postgres:
    image: postgis/postgis:12-master
    hostname: postgres
    ports:
      # host : container
      - "5433:5432"
    # networks:
    #   - ecomm
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: localrivet
    volumes:
      # Host env file for persistent data storage, change as desired
      - $HOME/docker/volumes/localrivet-swarm:/var/lib/postgresql/data
    restart: unless-stopped
    #### üê≤ ONLY UNCOMMENT THE BELOW IF YOU WANT TO FORCE OOM TYPE SCENARIOS!!! üê≤ ####
    # mem_limit: 32m        ## 32m is minimum allowable
    # mem_swappiness: 0
    # memswap_limit: 33m    ## Has to be higher than mem_limit
    # cpus: 0.5
  migrations:
    image: 127.0.0.1:5000/migrations
    build:
      context: ./db
      dockerfile: Dockerfile
    depends_on:
      - postgres
    environment:
      PGUSER: postgres
      PGPASSWORD: postgres
      PGDATABASE: localrivet
      PGHOST: postgres
      PGSSLMODE: disable
    # volumes:
    #   - ./db/migrations:/migrations
    # networks:
    #   - ecomm
    command: [ "/wait-for-postgres.sh", "/run-migrations.sh" ]

  # pgAdmin is a really nice system for working w/ postgres: https://www.pgadmin.org/
  pgadmin:
    image: dpage/pgadmin4:6.3
    depends_on:
      - postgres
    ports:
      # host : container
      - "5428:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: postgres@foo.com
      PGADMIN_DEFAULT_PASSWORD: postgres
    # networks:
    #   - ecomm
    restart: unless-stopped

  etcd1:
    image: docker.io/bitnami/etcd:3
    hostname: etcd1
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_NAME=etcd1
      - ETCD_INITIAL_ADVERTISE_PEER_URLS=http://etcd1:2380
      - ETCD_LISTEN_PEER_URLS=http://0.0.0.0:2380
      - ETCD_LISTEN_CLIENT_URLS=http://0.0.0.0:2379
      - ETCD_ADVERTISE_CLIENT_URLS=http://etcd1:2379
      - ETCD_INITIAL_CLUSTER_TOKEN=etcd-cluster
      - ETCD_INITIAL_CLUSTER=etcd1=http://etcd1:2380,etcd2=http://etcd2:2380,etcd3=http://etcd3:2380
      - ETCD_INITIAL_CLUSTER_STATE=new
    # networks:
    #   - ecomm

  etcd2:
    image: docker.io/bitnami/etcd:3
    hostname: etcd2
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_NAME=etcd2
      - ETCD_INITIAL_ADVERTISE_PEER_URLS=http://etcd2:2380
      - ETCD_LISTEN_PEER_URLS=http://0.0.0.0:2380
      - ETCD_LISTEN_CLIENT_URLS=http://0.0.0.0:2379
      - ETCD_ADVERTISE_CLIENT_URLS=http://etcd2:2379
      - ETCD_INITIAL_CLUSTER_TOKEN=etcd-cluster
      - ETCD_INITIAL_CLUSTER=etcd1=http://etcd1:2380,etcd2=http://etcd2:2380,etcd3=http://etcd3:2380
      - ETCD_INITIAL_CLUSTER_STATE=new
    # networks:
    #   - ecomm

  etcd3:
    image: docker.io/bitnami/etcd:3
    hostname: etcd3
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_NAME=etcd3
      - ETCD_INITIAL_ADVERTISE_PEER_URLS=http://etcd3:2380
      - ETCD_LISTEN_PEER_URLS=http://0.0.0.0:2380
      - ETCD_LISTEN_CLIENT_URLS=http://0.0.0.0:2379
      - ETCD_ADVERTISE_CLIENT_URLS=http://etcd3:2379
      - ETCD_INITIAL_CLUSTER_TOKEN=etcd-cluster
      - ETCD_INITIAL_CLUSTER=etcd1=http://etcd1:2380,etcd2=http://etcd2:2380,etcd3=http://etcd3:2380
      - ETCD_INITIAL_CLUSTER_STATE=new
    # networks:
    #   - ecomm

    # networks:
    #   ecomm:
    #     driver: bridge
    # ecomm:
    #   external: true
