{
  "swagger": "2.0",
  "info": {
    "title": "Client Gateway API",
    "description": "client gateway api",
    "version": "1"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/api/ping": {
      "get": {
        "summary": "Ping",
        "description": "Ping for API up validation. On valid returns {ping: pong}",
        "operationId": "ping",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/PingResponse"
            }
          }
        },
        "requestBody": {},
        "tags": [
          "api"
        ]
      }
    },
    "/v1/cart": {
      "post": {
        "summary": "Create Cart",
        "description": "creates a new shopping cart for the store declared in the request header",
        "operationId": "createCart",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/CartResponse"
            }
          }
        },
        "requestBody": {},
        "tags": [
          "cart"
        ]
      }
    },
    "/v1/cart/{cart_id}": {
      "get": {
        "summary": "Get By Cart Id",
        "description": "returns a cart from the database",
        "operationId": "getByCartId",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/CartResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "cart_id",
            "description": "the cart UUID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {},
        "tags": [
          "cart"
        ]
      },
      "delete": {
        "summary": "Clear Cart",
        "description": "removes all cart items",
        "operationId": "clearCart",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/CartResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "cart_id",
            "description": "the cart UUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": " clear cart",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClearCartRequest"
            }
          }
        ],
        "requestBody": {},
        "tags": [
          "cart"
        ]
      },
      "post": {
        "summary": "Add Item",
        "description": "adds an item to cart",
        "operationId": "addItem",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/CartResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "cart_id",
            "description": "the cart UUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": " add item to cart",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddItemRequest"
            }
          }
        ],
        "requestBody": {},
        "tags": [
          "cart"
        ]
      }
    },
    "/v1/cart/{cart_id}/bulk": {
      "post": {
        "summary": "Bulk Add Item",
        "description": "adds multiple items at once to a cart",
        "operationId": "bulkAddItems",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/CartResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "cart_id",
            "description": "the cart UUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": " bulk add items to cart",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BulkAddItemsRequest"
            }
          }
        ],
        "requestBody": {},
        "tags": [
          "cart"
        ]
      }
    },
    "/v1/cart/{cart_id}/customer": {
      "post": {
        "summary": "Attach Customer",
        "description": "attaches a customer to the cart by email",
        "operationId": "attachCustomer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/CartResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "cart_id",
            "description": "the cart UUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": " attach customer",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AttachCustomerRequest"
            }
          }
        ],
        "requestBody": {},
        "tags": [
          "cart"
        ]
      },
      "put": {
        "summary": "Update Customer Detail",
        "description": "updates a cart's personal details",
        "operationId": "updateCustomerDetail",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/CartResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "cart_id",
            "description": "the cart UUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": " update customer detail",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateCustomerDetailRequest"
            }
          }
        ],
        "requestBody": {},
        "tags": [
          "cart"
        ]
      }
    },
    "/v1/cart/{cart_id}/status": {
      "put": {
        "summary": "Update Status",
        "description": "updates a cart's status to: unknown = 0, new = 1, checkout = 2, paid = 3, complete = 4, abandoned = 5",
        "operationId": "updateStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/CartResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "cart_id",
            "description": "the cart UUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": " update status",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateStatusRequest"
            }
          }
        ],
        "requestBody": {},
        "tags": [
          "cart"
        ]
      }
    },
    "/v1/cart/{cart_id}/{session_id}": {
      "get": {
        "summary": "Get By Session Id",
        "description": "returns a cart from the session object",
        "operationId": "getBySessionId",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/CartResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "cart_id",
            "description": "the cart UUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "session_id",
            "description": "the cart session id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {},
        "tags": [
          "cart"
        ]
      }
    },
    "/v1/cart/{cart_id}/{sku}": {
      "delete": {
        "summary": "Remove Item",
        "description": "removes a cart item",
        "operationId": "removeItem",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/CartResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "cart_id",
            "description": "the cart UUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "sku",
            "description": "the item's sku",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": " remove item in cart",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RemoveItemRequest"
            }
          }
        ],
        "requestBody": {},
        "tags": [
          "cart"
        ]
      },
      "put": {
        "summary": "Update Item Quantity",
        "description": "updates an item's quantity",
        "operationId": "updateItemQuantity",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/CartResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "cart_id",
            "description": "the cart UUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "sku",
            "description": "the item's sku",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": " update item quantity in cart",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateItemQuantityRequest"
            }
          }
        ],
        "requestBody": {},
        "tags": [
          "cart"
        ]
      }
    },
    "/v1/categories": {
      "get": {
        "summary": "Get All Categories",
        "description": "returns all categories belonging to a store",
        "operationId": "getAllCategories",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetAllCategoriesResponse"
            }
          }
        },
        "requestBody": {},
        "tags": [
          "categories"
        ]
      }
    },
    "/v1/category/slug": {
      "post": {
        "summary": "Get Category By Slug",
        "description": "returns all categories by slug belonging to a store",
        "operationId": "getCategoryBySlug",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/Category"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": " get category by slug",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCategoryBySlugRequest"
            }
          }
        ],
        "requestBody": {},
        "tags": [
          "categories"
        ]
      }
    },
    "/v1/category/{id}": {
      "get": {
        "summary": "Get Category By Id",
        "description": "returns all categories by id belonging to a store",
        "operationId": "getCategoryById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/Category"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {},
        "tags": [
          "categories"
        ]
      }
    },
    "/v1/customer": {
      "get": {
        "summary": "Login",
        "description": "login for customers",
        "operationId": "getCustomer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetCustomerResponse"
            }
          }
        },
        "requestBody": {},
        "tags": [
          "customers"
        ]
      },
      "post": {
        "summary": "Create Customer",
        "description": "creates a new customer",
        "operationId": "createCustomer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/CreateCustomerResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": " create customer",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateCustomerRequest"
            }
          }
        ],
        "requestBody": {},
        "tags": [
          "customers"
        ]
      }
    },
    "/v1/customer/email": {
      "post": {
        "summary": "Check for Existing Email",
        "description": "verifies the email address is unique",
        "operationId": "checkForExistingEmail",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/CheckForExistingEmailResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": " email",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckForExistingEmailRequest"
            }
          }
        ],
        "requestBody": {},
        "tags": [
          "customers"
        ]
      }
    },
    "/v1/customer/forgot-password": {
      "post": {
        "summary": "Forgot Password",
        "description": "send forgot password email to customer",
        "operationId": "forgotPassword",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ForgotPasswordResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": ", Emails,, forgot password",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ForgotPasswordRequest"
            }
          }
        ],
        "requestBody": {},
        "tags": [
          "customers"
        ]
      }
    },
    "/v1/customer/login": {
      "post": {
        "summary": "Login",
        "description": "login for customers",
        "operationId": "login",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/CustomerLoginResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": ", requests \u0026 responses,, login",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerLoginRequest"
            }
          }
        ],
        "requestBody": {},
        "tags": [
          "customers"
        ]
      }
    },
    "/v1/customer/password": {
      "post": {
        "summary": "Create Customer",
        "description": "creates a new customer",
        "operationId": "setPassword",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/SetPasswordResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": " set password",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SetPasswordRequest"
            }
          }
        ],
        "requestBody": {},
        "tags": [
          "customers"
        ]
      }
    },
    "/v1/customer/resend-confirm-email": {
      "post": {
        "summary": "Resend Email Address Confirm Email",
        "description": "resend email address confirmation email",
        "operationId": "resendConfirmEmail",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ResendConfirmEmailResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": " resend confirm email",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResendConfirmEmailRequest"
            }
          }
        ],
        "requestBody": {},
        "tags": [
          "customers"
        ]
      }
    },
    "/v1/customer/verify-email-address": {
      "post": {
        "summary": "Verify Email Address",
        "description": "verifies an email address via code contained in resendConfirmEmail",
        "operationId": "verifyEmailAddress",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/VerifyEmailAddressResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": " verify customer email address",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VerifyEmailAddressRequest"
            }
          }
        ],
        "requestBody": {},
        "tags": [
          "customers"
        ]
      }
    },
    "/v1/product/sku/{sku}": {
      "get": {
        "summary": "Get Product By Sku",
        "description": "returns all products by sku belonging to a store",
        "operationId": "getProductBySku",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        },
        "parameters": [
          {
            "name": "sku",
            "description": "product sku",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {},
        "tags": [
          "products"
        ]
      }
    },
    "/v1/product/slug/{slug}": {
      "get": {
        "summary": "Get Product By Slug",
        "description": "returns matching product by slug",
        "operationId": "getProductBySlug",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        },
        "parameters": [
          {
            "name": "slug",
            "description": "product slug",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {},
        "tags": [
          "products"
        ]
      }
    },
    "/v1/product/{id}": {
      "get": {
        "summary": "Get Product By Id",
        "description": "returns matching product by id",
        "operationId": "getProductById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "product id",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "requestBody": {},
        "tags": [
          "products"
        ]
      }
    },
    "/v1/products/{category_id}/{current_page}/{page_size}": {
      "get": {
        "summary": "Get Products By Category Id",
        "description": "returns all products by category id belonging to a store",
        "operationId": "getProductsByCategoryId",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetProductsByCategoryIdResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "category_id",
            "description": "category id",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "current_page",
            "description": "current page number",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "page_size",
            "description": "number of records per page",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortOn",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "requestBody": {},
        "tags": [
          "products"
        ]
      }
    },
    "/v1/products/{current_page}/{page_size}": {
      "get": {
        "summary": "Get All Products",
        "description": "returns all products belonging to a store",
        "operationId": "getAllProducts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetAllProductsResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "current_page",
            "description": "current page number",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "page_size",
            "description": "number of records per page",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortOn",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "requestBody": {},
        "tags": [
          "products"
        ]
      }
    }
  },
  "definitions": {
    "AddItemRequest": {
      "type": "object",
      "properties": {
        "cart_id": {
          "type": "string"
        },
        "item": {
          "$ref": "#/definitions/Item"
        }
      },
      "title": "AddItemRequest",
      "required": [
        "cart_id",
        "item"
      ]
    },
    "Address": {
      "type": "object",
      "properties": {
        "street": {
          "type": "string",
          "description": " street name, ie: 1723 NW 23rd Ave."
        },
        "apt_suite": {
          "type": "string",
          "description": " apartment or suite"
        },
        "city": {
          "type": "string",
          "description": " city name"
        },
        "state_province": {
          "type": "string",
          "description": " state or province name"
        },
        "country": {
          "type": "string",
          "description": " IISO 3166-1 alpha-2 country code. https:en.wikipedia.org/wiki/List_of_ISO_3166_country_codes"
        },
        "postal_code": {
          "type": "string",
          "description": " postal or zip code"
        },
        "is_default": {
          "type": "boolean",
          "format": "boolean",
          "description": " indicates if this is a default address"
        }
      },
      "title": "Address",
      "required": [
        "street",
        "city",
        "state_province",
        "country",
        "postal_code",
        "is_default"
      ]
    },
    "Asset": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": " asset id"
        },
        "product_id": {
          "type": "integer",
          "format": "int64",
          "description": " product id"
        },
        "variant_id": {
          "type": "integer",
          "format": "int64",
          "description": " variant id"
        },
        "name": {
          "type": "string",
          "description": " asset name"
        },
        "display_name": {
          "type": "string",
          "description": " display name"
        },
        "url": {
          "type": "string",
          "description": " full, public access url"
        },
        "kind": {
          "type": "integer",
          "format": "int32",
          "description": " asset kind (0=unknown|1=image|2=document|3=audio|4=video|5=archive)"
        },
        "content_type": {
          "type": "string",
          "description": " content type (mime type)"
        },
        "sort_order": {
          "type": "integer",
          "format": "int64",
          "description": " sort order"
        },
        "sizes": {
          "type": "object",
          "description": " map[tag:string]url:string"
        }
      },
      "title": "Asset"
    },
    "AttachCustomerRequest": {
      "type": "object",
      "properties": {
        "cart_id": {
          "type": "string"
        },
        "customer_email": {
          "type": "string"
        }
      },
      "title": "AttachCustomerRequest",
      "required": [
        "cart_id",
        "customer_email"
      ]
    },
    "BulkAddItemsRequest": {
      "type": "object",
      "properties": {
        "cart_id": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Item"
          }
        }
      },
      "title": "BulkAddItemsRequest",
      "required": [
        "cart_id",
        "items"
      ]
    },
    "Cart": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "store_id": {
          "type": "integer",
          "format": "int64"
        },
        "session": {
          "type": "string"
        },
        "customer_id": {
          "type": "integer",
          "format": "int64"
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "billing_address": {
          "$ref": "#/definitions/Address"
        },
        "shipping_address": {
          "$ref": "#/definitions/Address"
        },
        "discount_id": {
          "type": "integer",
          "format": "int64"
        },
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "currency": {
          "type": "string"
        },
        "expires_at": {
          "type": "string"
        },
        "abandoned_at": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Item"
          },
          "description": " a collection of Item"
        },
        "total_price": {
          "type": "number",
          "format": "double",
          "description": " the sum total of the cart"
        }
      },
      "title": "Cart",
      "required": [
        "total_price"
      ]
    },
    "CartResponse": {
      "type": "object",
      "properties": {
        "cart": {
          "$ref": "#/definitions/Cart"
        },
        "session_id": {
          "type": "string"
        },
        "similar_products": {
          "$ref": "#/definitions/SimilarProducts"
        },
        "others_bought": {
          "$ref": "#/definitions/OthersBought"
        }
      },
      "title": "CartResponse",
      "required": [
        "cart",
        "session_id"
      ]
    },
    "Category": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": " category id"
        },
        "parent_id": {
          "type": "integer",
          "format": "int64",
          "description": " parent category id. references Category.Id"
        },
        "slug": {
          "type": "string",
          "description": " slug name of the category"
        },
        "name": {
          "type": "string",
          "description": " name of category"
        },
        "description": {
          "type": "string",
          "description": " description of category"
        },
        "meta_title": {
          "type": "string",
          "description": " metatag title for SEO"
        },
        "meta_description": {
          "type": "string",
          "description": " metatag description for SEO"
        },
        "meta_keywords": {
          "type": "string",
          "description": " metatag keywords for SEO"
        },
        "depth": {
          "type": "integer",
          "format": "int32",
          "description": " category level depth"
        },
        "sort_order": {
          "type": "integer",
          "format": "int32",
          "description": " sort order of menu items on the same level and same parent id"
        }
      },
      "title": "Category"
    },
    "CategoryPair": {
      "type": "object",
      "properties": {
        "slug": {
          "type": "string",
          "description": " slug name of the category"
        },
        "name": {
          "type": "string",
          "description": " name of category"
        }
      },
      "title": "CategoryPair",
      "required": [
        "slug",
        "name"
      ]
    },
    "CheckForExistingEmailRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "description": " Customer object"
        }
      },
      "title": "CheckForExistingEmailRequest",
      "required": [
        "email"
      ]
    },
    "CheckForExistingEmailResponse": {
      "type": "object",
      "properties": {
        "exists": {
          "type": "boolean",
          "format": "boolean",
          "description": " boolean true/false if email exists or not"
        },
        "is_verified": {
          "type": "boolean",
          "format": "boolean",
          "description": " boolean true/false"
        }
      },
      "title": "CheckForExistingEmailResponse",
      "required": [
        "exists",
        "is_verified"
      ]
    },
    "ClearCartRequest": {
      "type": "object",
      "properties": {
        "cart_id": {
          "type": "string"
        }
      },
      "title": "ClearCartRequest",
      "required": [
        "cart_id"
      ]
    },
    "CreateCustomerRequest": {
      "type": "object",
      "properties": {
        "customer": {
          "$ref": "#/definitions/NewCustomer",
          "description": " NewCustomer object"
        }
      },
      "title": "CreateCustomerRequest",
      "required": [
        "customer"
      ]
    },
    "CreateCustomerResponse": {
      "type": "object",
      "properties": {
        "customer": {
          "$ref": "#/definitions/Customer",
          "description": " Customer object"
        }
      },
      "title": "CreateCustomerResponse",
      "required": [
        "customer"
      ]
    },
    "Customer": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": " customer id"
        },
        "first_name": {
          "type": "string",
          "description": " first name"
        },
        "last_name": {
          "type": "string",
          "description": " last or given name"
        },
        "company": {
          "type": "string",
          "description": " company name"
        },
        "phone": {
          "type": "string",
          "description": " phone"
        },
        "email": {
          "type": "string",
          "description": " email address"
        },
        "is_verified": {
          "type": "boolean",
          "format": "boolean",
          "description": " is_verified"
        },
        "billing_addresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Address"
          },
          "description": " Address object"
        },
        "shipping_addresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Address"
          },
          "description": " array of Address objects"
        }
      },
      "title": "Customer"
    },
    "CustomerLoginRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "description": " email address, unique to each store id"
        },
        "password": {
          "type": "string",
          "description": " password"
        }
      },
      "title": "CustomerLoginRequest",
      "required": [
        "email",
        "password"
      ]
    },
    "CustomerLoginResponse": {
      "type": "object",
      "properties": {
        "jwt": {
          "$ref": "#/definitions/JwtToken",
          "description": " jwt token"
        },
        "customer": {
          "$ref": "#/definitions/Customer",
          "description": " Customer object"
        },
        "success": {
          "type": "boolean",
          "format": "boolean",
          "description": " success bool"
        }
      },
      "title": "CustomerLoginResponse",
      "required": [
        "success"
      ]
    },
    "ForgotPasswordRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "description": " email address, unique to each store id"
        }
      },
      "title": "ForgotPasswordRequest",
      "required": [
        "email"
      ]
    },
    "ForgotPasswordResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "format": "boolean",
          "description": " success bool"
        }
      },
      "title": "ForgotPasswordResponse",
      "required": [
        "success"
      ]
    },
    "GetAllCategoriesResponse": {
      "type": "object",
      "properties": {
        "categories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Category"
          },
          "description": " a collection of Category"
        }
      },
      "title": "GetAllCategoriesResponse"
    },
    "GetAllProductsRequest": {
      "type": "object",
      "properties": {
        "current_page": {
          "type": "integer",
          "format": "int64"
        },
        "page_size": {
          "type": "integer",
          "format": "int64"
        },
        "filter": {
          "type": "string"
        },
        "sortOn": {
          "type": "string"
        }
      },
      "title": "GetAllProductsRequest",
      "required": [
        "current_page",
        "page_size"
      ]
    },
    "GetAllProductsResponse": {
      "type": "object",
      "properties": {
        "products": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Product"
          }
        },
        "total_records": {
          "type": "integer",
          "format": "int64"
        },
        "total_pages": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "GetAllProductsResponse",
      "required": [
        "products",
        "total_records",
        "total_pages"
      ]
    },
    "GetByCartIdRequest": {
      "type": "object",
      "properties": {
        "cart_id": {
          "type": "string"
        }
      },
      "title": "GetByCartIdRequest",
      "required": [
        "cart_id"
      ]
    },
    "GetBySessionIdRequest": {
      "type": "object",
      "properties": {
        "session_id": {
          "type": "string"
        },
        "cart_id": {
          "type": "string"
        }
      },
      "title": "GetBySessionIdRequest",
      "required": [
        "session_id",
        "cart_id"
      ]
    },
    "GetCategoryByIdRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": " category id"
        }
      },
      "title": "GetCategoryByIdRequest",
      "required": [
        "id"
      ]
    },
    "GetCategoryBySlugRequest": {
      "type": "object",
      "properties": {
        "slug": {
          "type": "string",
          "description": " slug name of the category"
        }
      },
      "title": "GetCategoryBySlugRequest",
      "required": [
        "slug"
      ]
    },
    "GetCustomerResponse": {
      "type": "object",
      "properties": {
        "customer": {
          "$ref": "#/definitions/Customer",
          "description": " Customer object"
        }
      },
      "title": "GetCustomerResponse",
      "required": [
        "customer"
      ]
    },
    "GetProductByIdRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "GetProductByIdRequest",
      "required": [
        "id"
      ]
    },
    "GetProductBySkuRequest": {
      "type": "object",
      "properties": {
        "sku": {
          "type": "string"
        }
      },
      "title": "GetProductBySkuRequest",
      "required": [
        "sku"
      ]
    },
    "GetProductBySlugRequest": {
      "type": "object",
      "properties": {
        "slug": {
          "type": "string",
          "description": " slug name of the category"
        }
      },
      "title": "GetProductBySlugRequest",
      "required": [
        "slug"
      ]
    },
    "GetProductsByCategoryIdRequest": {
      "type": "object",
      "properties": {
        "category_id": {
          "type": "integer",
          "format": "int64"
        },
        "current_page": {
          "type": "integer",
          "format": "int64"
        },
        "page_size": {
          "type": "integer",
          "format": "int64"
        },
        "filter": {
          "type": "string"
        },
        "sortOn": {
          "type": "string"
        }
      },
      "title": "GetProductsByCategoryIdRequest",
      "required": [
        "category_id",
        "current_page",
        "page_size"
      ]
    },
    "GetProductsByCategoryIdResponse": {
      "type": "object",
      "properties": {
        "products": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Product"
          }
        },
        "total_records": {
          "type": "integer",
          "format": "int64"
        },
        "total_pages": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "GetProductsByCategoryIdResponse",
      "required": [
        "products",
        "total_records",
        "total_pages"
      ]
    },
    "Item": {
      "type": "object",
      "properties": {
        "note": {
          "type": "string",
          "description": " an item's variant sku number"
        },
        "sku": {
          "type": "string",
          "description": " an item's variant sku number"
        },
        "quantity": {
          "type": "integer",
          "format": "int32",
          "description": " how many of identical items"
        },
        "price": {
          "type": "number",
          "format": "double",
          "description": " the item's price"
        },
        "expires_at": {
          "type": "string",
          "description": " when this item expires in the cart"
        }
      },
      "title": "Item"
    },
    "JwtToken": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string"
        },
        "accessExpire": {
          "type": "integer",
          "format": "int64"
        },
        "refreshAfter": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "JwtToken"
    },
    "NewCustomer": {
      "type": "object",
      "properties": {
        "first_name": {
          "type": "string",
          "description": " first name"
        },
        "last_name": {
          "type": "string",
          "description": " last or given name"
        },
        "company": {
          "type": "string",
          "description": " company name"
        },
        "phone": {
          "type": "string",
          "description": " phone"
        },
        "email": {
          "type": "string",
          "description": " email address, unique per store id"
        },
        "billing_address": {
          "$ref": "#/definitions/Address",
          "description": " Address object"
        },
        "shipping_address": {
          "$ref": "#/definitions/Address",
          "description": " Address object"
        }
      },
      "title": "NewCustomer",
      "required": [
        "first_name",
        "last_name",
        "email"
      ]
    },
    "OthersBought": {
      "type": "object",
      "properties": {
        "variants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Variant"
          }
        }
      },
      "title": "OthersBought"
    },
    "PingResponse": {
      "type": "object",
      "properties": {
        "ping": {
          "type": "string"
        }
      },
      "title": "PingResponse",
      "required": [
        "ping"
      ]
    },
    "Price": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": " price id"
        },
        "sale_price": {
          "type": "number",
          "format": "double",
          "description": " sale price"
        },
        "formatted_sale_price": {
          "type": "string",
          "description": " formatted sale price"
        },
        "retail_price": {
          "type": "number",
          "format": "double",
          "description": " retail price"
        },
        "formatted_retail_price": {
          "type": "string",
          "description": " formatted retail price"
        },
        "currency": {
          "type": "string",
          "description": " currency. example: USD, CAN, etc."
        }
      },
      "title": "Price",
      "required": [
        "sale_price",
        "formatted_sale_price"
      ]
    },
    "Product": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": " product id"
        },
        "slug": {
          "type": "string",
          "description": " product slug"
        },
        "name": {
          "type": "string",
          "description": " product name"
        },
        "short_description": {
          "type": "string",
          "description": " product short description. used in category pages"
        },
        "description": {
          "type": "string",
          "description": " category description"
        },
        "meta_title": {
          "type": "string",
          "description": " metatag title for SEO"
        },
        "meta_description": {
          "type": "string",
          "description": " metatag description for SEO"
        },
        "meta_keywords": {
          "type": "string",
          "description": " metatag keywords for SEO"
        },
        "variants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Variant"
          },
          "description": " collection of Variant objects"
        },
        "default_image": {
          "$ref": "#/definitions/Asset",
          "description": " default Asset object of image type"
        },
        "images": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Asset"
          },
          "description": " array of Asset objects of image type"
        },
        "categories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CategoryPair"
          },
          "description": " array of Asset objects of image type"
        }
      },
      "title": "Product",
      "required": [
        "id",
        "slug",
        "name"
      ]
    },
    "RemoveItemRequest": {
      "type": "object",
      "properties": {
        "cart_id": {
          "type": "string"
        },
        "sku": {
          "type": "string"
        }
      },
      "title": "RemoveItemRequest",
      "required": [
        "cart_id",
        "sku"
      ]
    },
    "ResendConfirmEmailRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "description": " email address, unique to each store id"
        }
      },
      "title": "ResendConfirmEmailRequest",
      "required": [
        "email"
      ]
    },
    "ResendConfirmEmailResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "format": "boolean",
          "description": " success bool"
        }
      },
      "title": "ResendConfirmEmailResponse",
      "required": [
        "success"
      ]
    },
    "SetPasswordRequest": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": " customer verification code"
        },
        "password": {
          "type": "string",
          "description": " password"
        }
      },
      "title": "SetPasswordRequest",
      "required": [
        "code",
        "password"
      ]
    },
    "SetPasswordResponse": {
      "type": "object",
      "properties": {
        "jwt": {
          "$ref": "#/definitions/JwtToken",
          "description": " jwt token"
        },
        "customer": {
          "$ref": "#/definitions/Customer",
          "description": " Customer object"
        },
        "success": {
          "type": "boolean",
          "format": "boolean",
          "description": " success bool"
        }
      },
      "title": "SetPasswordResponse",
      "required": [
        "success"
      ]
    },
    "SimilarProducts": {
      "type": "object",
      "properties": {
        "variants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Variant"
          }
        }
      },
      "title": "SimilarProducts"
    },
    "UpdateCustomerDetailRequest": {
      "type": "object",
      "properties": {
        "cart_id": {
          "type": "string"
        },
        "first_nameoptional": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "billing_address": {
          "$ref": "#/definitions/Address"
        },
        "shipping_address": {
          "$ref": "#/definitions/Address"
        }
      },
      "title": "UpdateCustomerDetailRequest",
      "required": [
        "cart_id"
      ]
    },
    "UpdateCustomerRequest": {
      "type": "object",
      "properties": {
        "customer": {
          "$ref": "#/definitions/Customer",
          "description": " Customer object"
        }
      },
      "title": "UpdateCustomerRequest",
      "required": [
        "customer"
      ]
    },
    "UpdateCustomerResponse": {
      "type": "object",
      "properties": {
        "customer": {
          "$ref": "#/definitions/Customer",
          "description": " Customer object"
        },
        "success": {
          "type": "boolean",
          "format": "boolean",
          "description": " success bool"
        }
      },
      "title": "UpdateCustomerResponse",
      "required": [
        "customer",
        "success"
      ]
    },
    "UpdateItemQuantityRequest": {
      "type": "object",
      "properties": {
        "cart_id": {
          "type": "string"
        },
        "sku": {
          "type": "string"
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "UpdateItemQuantityRequest",
      "required": [
        "cart_id",
        "sku",
        "quantity"
      ]
    },
    "UpdateStatusRequest": {
      "type": "object",
      "properties": {
        "cart_id": {
          "type": "string"
        },
        "status": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "UpdateStatusRequest",
      "required": [
        "cart_id",
        "status"
      ]
    },
    "Variant": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": " variant id"
        },
        "is_default": {
          "type": "boolean",
          "format": "boolean",
          "description": " is default variant. each product must have exactly 1 default variant"
        },
        "sku": {
          "type": "string",
          "description": " variant sku. usually the product sku with appended identification tags"
        },
        "weight": {
          "type": "number",
          "format": "double",
          "description": " variant weight. used in calculating shipping"
        },
        "height": {
          "type": "number",
          "format": "double",
          "description": " variant height. used in calculating shipping"
        },
        "width": {
          "type": "number",
          "format": "double",
          "description": " variant width. used in calculating shipping"
        },
        "depth": {
          "type": "number",
          "format": "double",
          "description": " variant depth. used in calculating shipping"
        },
        "price": {
          "$ref": "#/definitions/Price",
          "description": " variant Price object"
        }
      },
      "title": "Variant",
      "required": [
        "id",
        "is_default",
        "sku"
      ]
    },
    "VerifyEmailAddressRequest": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": " verfication code"
        }
      },
      "title": "VerifyEmailAddressRequest",
      "required": [
        "code"
      ]
    },
    "VerifyEmailAddressResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "format": "boolean",
          "description": " success bool"
        }
      },
      "title": "VerifyEmailAddressResponse",
      "required": [
        "success"
      ]
    }
  },
  "securityDefinitions": {
    "apiKey": {
      "type": "apiKey",
      "description": "Enter JWT Bearer token **_only_**",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "apiKey": []
    }
  ]
}
