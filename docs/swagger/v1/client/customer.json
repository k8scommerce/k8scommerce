{
  "swagger": "2.0",
  "info": {
    "title": "",
    "version": ""
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/customer": {
      "get": {
        "summary": "Login",
        "description": "login for customers",
        "operationId": "getCustomer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetCustomerResponse"
            }
          }
        },
        "requestBody": {},
        "tags": [
          "customers"
        ]
      },
      "post": {
        "summary": "Create Customer",
        "description": "creates a new customer",
        "operationId": "createCustomer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/CreateCustomerResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": " create customer",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateCustomerRequest"
            }
          }
        ],
        "requestBody": {},
        "tags": [
          "customers"
        ]
      }
    },
    "/v1/customer/email": {
      "post": {
        "summary": "Check for Existing Email",
        "description": "verifies the email address is unique",
        "operationId": "checkForExistingEmail",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/CheckForExistingEmailResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": " email",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckForExistingEmailRequest"
            }
          }
        ],
        "requestBody": {},
        "tags": [
          "customers"
        ]
      }
    },
    "/v1/customer/forgot-password": {
      "post": {
        "summary": "Forgot Password",
        "description": "send forgot password email to customer",
        "operationId": "forgotPassword",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ForgotPasswordResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": ", Emails,, forgot password",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ForgotPasswordRequest"
            }
          }
        ],
        "requestBody": {},
        "tags": [
          "customers"
        ]
      }
    },
    "/v1/customer/login": {
      "post": {
        "summary": "Login",
        "description": "login for customers",
        "operationId": "login",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/CustomerLoginResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": ", requests \u0026 responses,, login",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerLoginRequest"
            }
          }
        ],
        "requestBody": {},
        "tags": [
          "customers"
        ]
      }
    },
    "/v1/customer/password": {
      "post": {
        "summary": "Create Customer",
        "description": "creates a new customer",
        "operationId": "setPassword",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/SetPasswordResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": " set password",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SetPasswordRequest"
            }
          }
        ],
        "requestBody": {},
        "tags": [
          "customers"
        ]
      }
    },
    "/v1/customer/resend-confirm-email": {
      "post": {
        "summary": "Resend Email Address Confirm Email",
        "description": "resend email address confirmation email",
        "operationId": "resendConfirmEmail",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ResendConfirmEmailResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": " resend confirm email",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResendConfirmEmailRequest"
            }
          }
        ],
        "requestBody": {},
        "tags": [
          "customers"
        ]
      }
    },
    "/v1/customer/verfify-email-address": {
      "post": {
        "summary": "Verify Email Address",
        "description": "verifies an email address via code contained in resendConfirmEmail",
        "operationId": "verifyEmailAddress",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/VerifyEmailAddressResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": " verify customer email address",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VerifyEmailAddressRequest"
            }
          }
        ],
        "requestBody": {},
        "tags": [
          "customers"
        ]
      }
    }
  },
  "definitions": {
    "Address": {
      "type": "object",
      "properties": {
        "street": {
          "type": "string",
          "description": " street name, ie: 1723 NW 23rd Ave."
        },
        "apt_suite": {
          "type": "string",
          "description": " apartment or suite"
        },
        "city": {
          "type": "string",
          "description": " city name"
        },
        "state_province": {
          "type": "string",
          "description": " state or province name"
        },
        "country": {
          "type": "string",
          "description": " IISO 3166-1 alpha-2 country code. https:en.wikipedia.org/wiki/List_of_ISO_3166_country_codes"
        },
        "postal_code": {
          "type": "string",
          "description": " postal or zip code"
        },
        "is_default": {
          "type": "boolean",
          "format": "boolean",
          "description": " indicates if this is a default address"
        }
      },
      "title": "Address",
      "required": [
        "street",
        "city",
        "state_province",
        "country",
        "postal_code",
        "is_default"
      ]
    },
    "CheckForExistingEmailRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "description": " Customer object"
        }
      },
      "title": "CheckForExistingEmailRequest",
      "required": [
        "email"
      ]
    },
    "CheckForExistingEmailResponse": {
      "type": "object",
      "properties": {
        "exists": {
          "type": "boolean",
          "format": "boolean",
          "description": " boolean true/false if email exists or not"
        },
        "is_verified": {
          "type": "boolean",
          "format": "boolean",
          "description": " boolean true/false"
        }
      },
      "title": "CheckForExistingEmailResponse",
      "required": [
        "exists",
        "is_verified"
      ]
    },
    "CreateCustomerRequest": {
      "type": "object",
      "properties": {
        "customer": {
          "$ref": "#/definitions/NewCustomer",
          "description": " NewCustomer object"
        }
      },
      "title": "CreateCustomerRequest",
      "required": [
        "customer"
      ]
    },
    "CreateCustomerResponse": {
      "type": "object",
      "properties": {
        "customer": {
          "$ref": "#/definitions/Customer",
          "description": " Customer object"
        }
      },
      "title": "CreateCustomerResponse",
      "required": [
        "customer"
      ]
    },
    "Customer": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": " customer id"
        },
        "first_name": {
          "type": "string",
          "description": " first name"
        },
        "last_name": {
          "type": "string",
          "description": " last or given name"
        },
        "email": {
          "type": "string",
          "description": " email address"
        },
        "is_verified": {
          "type": "boolean",
          "format": "boolean",
          "description": " is_verified"
        }
      },
      "title": "Customer",
      "required": [
        "id",
        "first_name",
        "last_name",
        "email"
      ]
    },
    "CustomerAccount": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": " customer id"
        },
        "billing_address": {
          "$ref": "#/definitions/Address",
          "description": " Address object"
        },
        "shipping_addresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Address"
          },
          "description": " array of Address objects"
        }
      },
      "title": "CustomerAccount",
      "required": [
        "id",
        "billing_address",
        "shipping_addresses"
      ]
    },
    "CustomerLoginRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "description": " email address, unique to each store id"
        },
        "password": {
          "type": "string",
          "description": " password"
        }
      },
      "title": "CustomerLoginRequest",
      "required": [
        "email",
        "password"
      ]
    },
    "CustomerLoginResponse": {
      "type": "object",
      "properties": {
        "jwt": {
          "$ref": "#/definitions/JwtToken",
          "description": " jwt token"
        },
        "customer": {
          "$ref": "#/definitions/Customer",
          "description": " Customer object"
        },
        "success": {
          "type": "boolean",
          "format": "boolean",
          "description": " success bool"
        }
      },
      "title": "CustomerLoginResponse",
      "required": [
        "jwt",
        "customer",
        "success"
      ]
    },
    "ForgotPasswordRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "description": " email address, unique to each store id"
        }
      },
      "title": "ForgotPasswordRequest",
      "required": [
        "email"
      ]
    },
    "ForgotPasswordResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "format": "boolean",
          "description": " success bool"
        }
      },
      "title": "ForgotPasswordResponse",
      "required": [
        "success"
      ]
    },
    "GetCustomerResponse": {
      "type": "object",
      "properties": {
        "customer": {
          "$ref": "#/definitions/Customer",
          "description": " Customer object"
        }
      },
      "title": "GetCustomerResponse",
      "required": [
        "customer"
      ]
    },
    "JwtToken": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string"
        },
        "accessExpire": {
          "type": "integer",
          "format": "int64"
        },
        "refreshAfter": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "JwtToken",
      "required": [
        "accessToken",
        "accessExpire",
        "refreshAfter"
      ]
    },
    "NewCustomer": {
      "type": "object",
      "properties": {
        "first_name": {
          "type": "string",
          "description": " first name"
        },
        "last_name": {
          "type": "string",
          "description": " last or given name"
        },
        "email": {
          "type": "string",
          "description": " email address, unique per store id"
        },
        "billing_address": {
          "$ref": "#/definitions/Address",
          "description": " Address object"
        },
        "shipping_address": {
          "$ref": "#/definitions/Address",
          "description": " Address object"
        }
      },
      "title": "NewCustomer",
      "required": [
        "first_name",
        "last_name",
        "email"
      ]
    },
    "ResendConfirmEmailRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "description": " email address, unique to each store id"
        }
      },
      "title": "ResendConfirmEmailRequest",
      "required": [
        "email"
      ]
    },
    "ResendConfirmEmailResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "format": "boolean",
          "description": " success bool"
        }
      },
      "title": "ResendConfirmEmailResponse",
      "required": [
        "success"
      ]
    },
    "ResponseStatus": {
      "type": "object",
      "properties": {
        "statusCode": {
          "type": "integer",
          "format": "int64",
          "description": " RFC http status code, ie. 204, etc - https:go.dev/src/net/http/status.go"
        },
        "statusMessage": {
          "type": "string",
          "description": " status message"
        }
      },
      "title": "ResponseStatus",
      "required": [
        "statusCode"
      ]
    },
    "SetPasswordRequest": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": " customer verification code"
        },
        "password": {
          "type": "string",
          "description": " password"
        }
      },
      "title": "SetPasswordRequest",
      "required": [
        "code",
        "password"
      ]
    },
    "SetPasswordResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "format": "boolean",
          "description": " success bool"
        }
      },
      "title": "SetPasswordResponse",
      "required": [
        "success"
      ]
    },
    "UpdateCustomerRequest": {
      "type": "object",
      "properties": {
        "customer": {
          "$ref": "#/definitions/Customer",
          "description": " Customer object"
        }
      },
      "title": "UpdateCustomerRequest",
      "required": [
        "customer"
      ]
    },
    "UpdateCustomerResponse": {
      "type": "object",
      "properties": {
        "customer": {
          "$ref": "#/definitions/Customer",
          "description": " Customer object"
        },
        "success": {
          "type": "boolean",
          "format": "boolean",
          "description": " success bool"
        }
      },
      "title": "UpdateCustomerResponse",
      "required": [
        "customer",
        "success"
      ]
    },
    "VerifyEmailAddressRequest": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": " verfication code"
        }
      },
      "title": "VerifyEmailAddressRequest",
      "required": [
        "code"
      ]
    },
    "VerifyEmailAddressResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "format": "boolean",
          "description": " success bool"
        }
      },
      "title": "VerifyEmailAddressResponse",
      "required": [
        "success"
      ]
    }
  },
  "securityDefinitions": {
    "apiKey": {
      "type": "apiKey",
      "description": "Enter JWT Bearer token **_only_**",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "apiKey": []
    }
  ]
}
