# If your Kubernetes cluster has RBAC enabled, a role and role binding
# will need to be created to allow this plugin to `list` and `patch` pods.

# A cluster role can be used to specify the `list` and `patch`
# requirements, while a role binding per namespace can be used to apply
# the cluster role. The example RBAC configs below assume your Micro-based
# services are running in the `test` namespace, and the pods that contain
# the services are using the `micro-services` service account.

# apiVersion: rbac.authorization.k8s.io/v1
# kind: ClusterRole
# metadata:
#   name: micro
# rules:
# - apiGroups:
#   - ""
#   resources:
#   - pods
#   verbs:
#   - list
#   - patch
#   - watch

# ---

# apiVersion: rbac.authorization.k8s.io/v1
# kind: RoleBinding
# metadata:
#   name: micro
# roleRef:
#   apiGroup: rbac.authorization.k8s.io
#   kind: ClusterRole
#   name: micro
# subjects:
# - kind: Role
#   name: micro
#   namespace: test


