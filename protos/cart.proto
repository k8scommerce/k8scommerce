syntax = "proto3";

package cart;
option go_package = "pb/cart";

import "google/protobuf/timestamp.proto";
import "catalog.proto";

message Cart {
  int64 store_id = 1;
  int64 customer_id = 2;
  repeated Item items = 3;
  int64 total_price = 4;
}

message Item {
  int64 store_id = 1;
  int64 customer_id = 2;
  string sku = 3;
  int32 quantity = 4;
  int64 price = 5;
  google.protobuf.Timestamp expires_at = 6;
  google.protobuf.Timestamp created_at = 7;
  google.protobuf.Timestamp updated_at = 8;
}

message Price {
  int64 id = 1;
  int64 variant_id = 2;
  double amount = 3;
  double compare_at_amount = 4;
  string currency = 5;
  int64 user_role_id = 6;
}

message SimilarProducts {
  repeated catalog.Variant variants = 1;
}

message OthersBought {
  repeated catalog.Variant variants = 1;
}

//
//
//
// Requests & Responses
//

// get cart
message GetCartRequest {
  int64 store_id = 1;
  int64 customer_id = 2;
}

message GetCartResponse {
  Cart cart = 1;
  int64 status_code = 2;
  string status_message = 3;
}

// clear cart
message ClearCartRequest {
  int64 store_id = 1;
  int64 customer_id = 2;
}

message ClearCartResponse {
  int64 status_code = 1;
  string status_message = 2;
}

// add item to cart
message AddItemToCartRequest {
  int64 store_id = 1;
  int64 customer_id = 2;
  Item item = 3;
}

message AddItemToCartResponse {
  Cart cart = 1;
  SimilarProducts similar_products = 2;
  OthersBought others_bought = 3;
  int64 status_code = 4;
  string status_message = 5;
}

// update item quantity in cart
message UpdateItemQuantityInCartRequest {
  int64 store_id = 1;
  int64 customer_id = 2;
  Item item = 3;
}

message UpdateItemQuantityInCartResponse {
  Cart cart = 1;
  int64 status_code = 2;
  string status_message = 3;
}

// remove item in cart
message RemoveItemInCartRequest {
  int64 store_id = 1;
  int64 customer_id = 2;
  string sku = 3;
}

message RemoveItemInCartResponse {
  Cart cart = 1;
  int64 status_code = 2;
  string status_message = 3;
}

// cart client
service CartClient {
  rpc GetCart(GetCartRequest) returns (GetCartResponse);
  rpc ClearCart(ClearCartRequest) returns (ClearCartResponse);

  rpc AddItemToCart(AddItemToCartRequest) returns (AddItemToCartResponse);
  rpc UpdateItemQuantityInCart(UpdateItemQuantityInCartRequest)
      returns (UpdateItemQuantityInCartResponse);
  rpc RemoveItemInCart(RemoveItemInCartRequest)
      returns (RemoveItemInCartResponse);
}