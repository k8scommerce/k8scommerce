syntax = "proto3";

package customer;
option go_package = "pb/customer";

// import "google/protobuf/wrappers.proto";
// import "google/protobuf/timestamp.proto";

message Customer {
  int64 id = 1;
  int64 store_id = 2;
  string first_name = 3;
  string last_name = 4;
  string email = 5;
  string password = 6;
  bool is_verified = 7;
  repeated Address billing_addresses = 8;
  repeated Address shipping_addresses = 9;
}

message Address {
  string street = 1;
  string apt_suite = 2;
  string city = 3;
  string state_province = 4;
  string country = 5;
  string postal_code = 6;
  bool is_default = 7;
}

//
//
//
// Requests & Responses
//

// create customer
message CreateCustomerRequest {
  int64 store_id = 1;
  Customer customer = 2;
}

message CreateCustomerResponse {
  Customer customer = 1;
}

// update customer
message UpdateCustomerRequest {
  int64 store_id = 1;
  Customer customer = 2;
}

message UpdateCustomerResponse {
  Customer customer = 1;
}

// get customer
message GetCustomerByEmailRequest {
  int64 store_id = 1;
  string email = 2;
}

message GetCustomerByEmailResponse {
  Customer customer = 1;
}

// set password
message SetPasswordRequest {
  int64 store_id = 1;
  string code = 2;
  string password = 3;
}

message SetPasswordResponse {
  Customer customer = 1;
  bool success = 2;
}

// login
message LoginRequest {
  int64 store_id = 1;
  string email = 2;
  string password = 3;
}

message LoginResponse {
  Customer customer = 1;
}

// forgot password
message SendForgotPasswordEmailRequest {
  int64 store_id = 1;
  string email = 2;
}

message SendForgotPasswordEmailResponse {
  bool success = 1;
}

// confirm email
message SendConfirmEmailAddressEmailRequest {
  int64 store_id = 1;
  string email = 2;
}

message SendConfirmEmailAddressEmailResponse {
  bool success = 1;
}

// verify customer email address
message VerifyEmailAddressRequest {
  int64 store_id = 1;
  string code = 2;
}

message VerifyEmailAddressResponse {
  bool success = 1;
}

// service client
service CustomerClient {
  rpc CreateCustomer(CreateCustomerRequest) returns (CreateCustomerResponse);
  rpc UpdateCustomer(UpdateCustomerRequest) returns (UpdateCustomerResponse);
  rpc GetCustomerByEmail(GetCustomerByEmailRequest)
      returns (GetCustomerByEmailResponse);
  rpc SetPassword(SetPasswordRequest) returns (SetPasswordResponse);
  rpc Login(LoginRequest) returns (LoginResponse);
  rpc SendForgotPasswordEmail(SendForgotPasswordEmailRequest)
      returns (SendForgotPasswordEmailResponse);
  rpc SendConfirmEmailAddressEmail(SendConfirmEmailAddressEmailRequest)
      returns (SendConfirmEmailAddressEmailResponse);
  rpc VerifyEmailAddress(VerifyEmailAddressRequest)
      returns (VerifyEmailAddressResponse);
}