info(
	title: "Admin Customer API"
	desc: "admin customer api"
	author: "localrivet"
	email: "localrivet"
	version: "1"
)

// objects
type Customer {
	Id        int64  `json:"id"`                 // customer id
	FirstName string `json:"firstName"`          // first name
	LastName  string `json:"lastName"`           // last or given name
	Email     string `json:"email,required"`     // email address
	Password  string `json:"password,omitempty"` // password
}

type NewCustomer {
	FirstName       string  `json:"firstName,required"`         // first name
	LastName        string  `json:"lastName,required"`          // last or given name
	Email           string  `json:"email,required"`             // email address, unique per store id
	Password        string  `json:"password,required"`          // password
	BillingAddress  Address `json:"billingAddress,optional"`    // Address object
	ShippingAddress Address `json:"shippingAddresses,optional"` // Address object
}

type CustomerAccount {
	CustomerId        int64     `json:"id"`                // customer id
	BillingAddress    Address   `json:"billingAddress"`    // Address object
	ShippingAddresses []Address `json:"shippingAddresses"` // collection of Address objects
}

type Address {
	Street        string `json:"street"`             // street name, ie: 1723 NW 23rd Ave.
	City          string `json:"city"`               // city name
	StateProvince string `json:"stateProvince"`      // state or province name
	Country       string `json:"country"`            // IISO 3166-1 alpha-2 country code. https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes
	PostalCode    string `json:"postalCode"`         // postal or zip code
	IsDefault     bool   `json:"isDefault,required"` // indicates if this is a default address
}

//
// requests & responses
//

// login
type CustomerLoginRequest {
	Email    string `json:"email,required"`    // email address, unique to each store id
	Password string `json:"password,required"` // password
}

type CustomerLoginResponse {
	JwtToken       JwtToken       `json:"jwt"`      // jwt token
	Customer       Customer       `json:"customer"` // Customer object
	ResponseStatus ResponseStatus `json:"status"`   // a ResponseStatus object
}

// create customer
type CreateCustomerRequest {
	Customer NewCustomer `json:"customer"` // NewCustomer object
}

type CreateCustomerResponse {
	Customer       Customer       `json:"customer"` // Customer object
	ResponseStatus ResponseStatus `json:"status"`   // a ResponseStatus object
}

//
// endpoints
//

@server(
	// jwt: Auth
	middleware: Locale, StoreKey
	group: customers
)
service admin {
	@doc(
		summary: "Create Customer"
		description: "creates a new customer"
	)
	@handler createCustomer
	post /v1/customer(CreateCustomerRequest) returns (CreateCustomerResponse)
	
	@doc(
		summary: "Login"
		description: "login for customers"
	)
	@handler customerLogin
	post /v1/customer/login(CustomerLoginRequest) returns (CustomerLoginResponse)
}