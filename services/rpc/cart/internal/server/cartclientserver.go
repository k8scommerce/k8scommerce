// Code generated by goctl. DO NOT EDIT!
// Source: cart.proto

package server

import (
	"context"

	"k8scommerce/services/rpc/cart/internal/logic"
	"k8scommerce/services/rpc/cart/internal/svc"
	"k8scommerce/services/rpc/cart/pb/cart"

	"github.com/localrivet/galaxycache"
)

type CartClientServer struct {
	svcCtx   *svc.ServiceContext
	universe *galaxycache.Universe
}

func NewCartClientServer(svcCtx *svc.ServiceContext, universe *galaxycache.Universe) *CartClientServer {
	return &CartClientServer{
		svcCtx:   svcCtx,
		universe: universe,
	}
}

func (s *CartClientServer) GetCart(ctx context.Context, in *cart.GetCartRequest) (*cart.GetCartResponse, error) {
	l := logic.NewGetCartLogic(ctx, s.svcCtx, s.universe)
	return l.GetCart(in)
}

func (s *CartClientServer) ClearCart(ctx context.Context, in *cart.ClearCartRequest) (*cart.ClearCartResponse, error) {
	l := logic.NewClearCartLogic(ctx, s.svcCtx, s.universe)
	return l.ClearCart(in)
}

func (s *CartClientServer) AddItemToCart(ctx context.Context, in *cart.AddItemToCartRequest) (*cart.AddItemToCartResponse, error) {
	l := logic.NewAddItemToCartLogic(ctx, s.svcCtx, s.universe)
	return l.AddItemToCart(in)
}

func (s *CartClientServer) UpdateItemQuantityInCart(ctx context.Context, in *cart.UpdateItemQuantityInCartRequest) (*cart.UpdateItemQuantityInCartResponse, error) {
	l := logic.NewUpdateItemQuantityInCartLogic(ctx, s.svcCtx, s.universe)
	return l.UpdateItemQuantityInCart(in)
}

func (s *CartClientServer) RemoveItemInCart(ctx context.Context, in *cart.RemoveItemInCartRequest) (*cart.RemoveItemInCartResponse, error) {
	l := logic.NewRemoveItemInCartLogic(ctx, s.svcCtx, s.universe)
	return l.RemoveItemInCart(in)
}
