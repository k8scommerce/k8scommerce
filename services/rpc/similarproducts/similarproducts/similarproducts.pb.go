// Code generated by protoc-gen-go. DO NOT EDIT.
// source: similarproducts.proto

package similarproducts

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Variant struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ProductId            int64    `protobuf:"varint,2,opt,name=productId,proto3" json:"productId,omitempty"`
	IsDefault            bool     `protobuf:"varint,3,opt,name=isDefault,proto3" json:"isDefault,omitempty"`
	Sku                  string   `protobuf:"bytes,4,opt,name=sku,proto3" json:"sku,omitempty"`
	SortOrder            int32    `protobuf:"varint,5,opt,name=sortOrder,proto3" json:"sortOrder,omitempty"`
	CostAmount           float64  `protobuf:"fixed64,6,opt,name=costAmount,proto3" json:"costAmount,omitempty"`
	CostCurrency         string   `protobuf:"bytes,7,opt,name=costCurrency,proto3" json:"costCurrency,omitempty"`
	TrackInventory       bool     `protobuf:"varint,8,opt,name=trackInventory,proto3" json:"trackInventory,omitempty"`
	TaxCategoryId        int64    `protobuf:"varint,9,opt,name=taxCategoryId,proto3" json:"taxCategoryId,omitempty"`
	ShippingCategoryId   int64    `protobuf:"varint,10,opt,name=shippingCategoryId,proto3" json:"shippingCategoryId,omitempty"`
	DiscontinueOn        string   `protobuf:"bytes,11,opt,name=discontinueOn,proto3" json:"discontinueOn,omitempty"`
	Weight               float64  `protobuf:"fixed64,12,opt,name=weight,proto3" json:"weight,omitempty"`
	Height               float64  `protobuf:"fixed64,13,opt,name=height,proto3" json:"height,omitempty"`
	Width                float64  `protobuf:"fixed64,14,opt,name=width,proto3" json:"width,omitempty"`
	Depth                float64  `protobuf:"fixed64,15,opt,name=depth,proto3" json:"depth,omitempty"`
	Price                *Price   `protobuf:"bytes,16,opt,name=price,proto3" json:"price,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Variant) Reset()         { *m = Variant{} }
func (m *Variant) String() string { return proto.CompactTextString(m) }
func (*Variant) ProtoMessage()    {}
func (*Variant) Descriptor() ([]byte, []int) {
	return fileDescriptor_ecca1bf6bea16d2b, []int{0}
}

func (m *Variant) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Variant.Unmarshal(m, b)
}
func (m *Variant) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Variant.Marshal(b, m, deterministic)
}
func (m *Variant) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Variant.Merge(m, src)
}
func (m *Variant) XXX_Size() int {
	return xxx_messageInfo_Variant.Size(m)
}
func (m *Variant) XXX_DiscardUnknown() {
	xxx_messageInfo_Variant.DiscardUnknown(m)
}

var xxx_messageInfo_Variant proto.InternalMessageInfo

func (m *Variant) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Variant) GetProductId() int64 {
	if m != nil {
		return m.ProductId
	}
	return 0
}

func (m *Variant) GetIsDefault() bool {
	if m != nil {
		return m.IsDefault
	}
	return false
}

func (m *Variant) GetSku() string {
	if m != nil {
		return m.Sku
	}
	return ""
}

func (m *Variant) GetSortOrder() int32 {
	if m != nil {
		return m.SortOrder
	}
	return 0
}

func (m *Variant) GetCostAmount() float64 {
	if m != nil {
		return m.CostAmount
	}
	return 0
}

func (m *Variant) GetCostCurrency() string {
	if m != nil {
		return m.CostCurrency
	}
	return ""
}

func (m *Variant) GetTrackInventory() bool {
	if m != nil {
		return m.TrackInventory
	}
	return false
}

func (m *Variant) GetTaxCategoryId() int64 {
	if m != nil {
		return m.TaxCategoryId
	}
	return 0
}

func (m *Variant) GetShippingCategoryId() int64 {
	if m != nil {
		return m.ShippingCategoryId
	}
	return 0
}

func (m *Variant) GetDiscontinueOn() string {
	if m != nil {
		return m.DiscontinueOn
	}
	return ""
}

func (m *Variant) GetWeight() float64 {
	if m != nil {
		return m.Weight
	}
	return 0
}

func (m *Variant) GetHeight() float64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *Variant) GetWidth() float64 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *Variant) GetDepth() float64 {
	if m != nil {
		return m.Depth
	}
	return 0
}

func (m *Variant) GetPrice() *Price {
	if m != nil {
		return m.Price
	}
	return nil
}

type Price struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	VariantId            int64    `protobuf:"varint,2,opt,name=variantId,proto3" json:"variantId,omitempty"`
	Amount               float64  `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`
	CompareAtAmount      float64  `protobuf:"fixed64,4,opt,name=compareAtAmount,proto3" json:"compareAtAmount,omitempty"`
	Currency             string   `protobuf:"bytes,5,opt,name=currency,proto3" json:"currency,omitempty"`
	UserRoleId           int64    `protobuf:"varint,6,opt,name=userRoleId,proto3" json:"userRoleId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Price) Reset()         { *m = Price{} }
func (m *Price) String() string { return proto.CompactTextString(m) }
func (*Price) ProtoMessage()    {}
func (*Price) Descriptor() ([]byte, []int) {
	return fileDescriptor_ecca1bf6bea16d2b, []int{1}
}

func (m *Price) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Price.Unmarshal(m, b)
}
func (m *Price) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Price.Marshal(b, m, deterministic)
}
func (m *Price) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Price.Merge(m, src)
}
func (m *Price) XXX_Size() int {
	return xxx_messageInfo_Price.Size(m)
}
func (m *Price) XXX_DiscardUnknown() {
	xxx_messageInfo_Price.DiscardUnknown(m)
}

var xxx_messageInfo_Price proto.InternalMessageInfo

func (m *Price) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Price) GetVariantId() int64 {
	if m != nil {
		return m.VariantId
	}
	return 0
}

func (m *Price) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Price) GetCompareAtAmount() float64 {
	if m != nil {
		return m.CompareAtAmount
	}
	return 0
}

func (m *Price) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *Price) GetUserRoleId() int64 {
	if m != nil {
		return m.UserRoleId
	}
	return 0
}

// get one by sku
type GetSimilarProductsBySkuRequest struct {
	Sku                  string   `protobuf:"bytes,1,opt,name=sku,proto3" json:"sku,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSimilarProductsBySkuRequest) Reset()         { *m = GetSimilarProductsBySkuRequest{} }
func (m *GetSimilarProductsBySkuRequest) String() string { return proto.CompactTextString(m) }
func (*GetSimilarProductsBySkuRequest) ProtoMessage()    {}
func (*GetSimilarProductsBySkuRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ecca1bf6bea16d2b, []int{2}
}

func (m *GetSimilarProductsBySkuRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSimilarProductsBySkuRequest.Unmarshal(m, b)
}
func (m *GetSimilarProductsBySkuRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSimilarProductsBySkuRequest.Marshal(b, m, deterministic)
}
func (m *GetSimilarProductsBySkuRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSimilarProductsBySkuRequest.Merge(m, src)
}
func (m *GetSimilarProductsBySkuRequest) XXX_Size() int {
	return xxx_messageInfo_GetSimilarProductsBySkuRequest.Size(m)
}
func (m *GetSimilarProductsBySkuRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSimilarProductsBySkuRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetSimilarProductsBySkuRequest proto.InternalMessageInfo

func (m *GetSimilarProductsBySkuRequest) GetSku() string {
	if m != nil {
		return m.Sku
	}
	return ""
}

type GetSimilarProductsBySkuResponse struct {
	Variants             []*Variant `protobuf:"bytes,1,rep,name=variants,proto3" json:"variants,omitempty"`
	StatusCode           int64      `protobuf:"varint,2,opt,name=statusCode,proto3" json:"statusCode,omitempty"`
	StatusMessage        string     `protobuf:"bytes,3,opt,name=statusMessage,proto3" json:"statusMessage,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GetSimilarProductsBySkuResponse) Reset()         { *m = GetSimilarProductsBySkuResponse{} }
func (m *GetSimilarProductsBySkuResponse) String() string { return proto.CompactTextString(m) }
func (*GetSimilarProductsBySkuResponse) ProtoMessage()    {}
func (*GetSimilarProductsBySkuResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ecca1bf6bea16d2b, []int{3}
}

func (m *GetSimilarProductsBySkuResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSimilarProductsBySkuResponse.Unmarshal(m, b)
}
func (m *GetSimilarProductsBySkuResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSimilarProductsBySkuResponse.Marshal(b, m, deterministic)
}
func (m *GetSimilarProductsBySkuResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSimilarProductsBySkuResponse.Merge(m, src)
}
func (m *GetSimilarProductsBySkuResponse) XXX_Size() int {
	return xxx_messageInfo_GetSimilarProductsBySkuResponse.Size(m)
}
func (m *GetSimilarProductsBySkuResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSimilarProductsBySkuResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetSimilarProductsBySkuResponse proto.InternalMessageInfo

func (m *GetSimilarProductsBySkuResponse) GetVariants() []*Variant {
	if m != nil {
		return m.Variants
	}
	return nil
}

func (m *GetSimilarProductsBySkuResponse) GetStatusCode() int64 {
	if m != nil {
		return m.StatusCode
	}
	return 0
}

func (m *GetSimilarProductsBySkuResponse) GetStatusMessage() string {
	if m != nil {
		return m.StatusMessage
	}
	return ""
}

func init() {
	proto.RegisterType((*Variant)(nil), "similarproducts.Variant")
	proto.RegisterType((*Price)(nil), "similarproducts.Price")
	proto.RegisterType((*GetSimilarProductsBySkuRequest)(nil), "similarproducts.GetSimilarProductsBySkuRequest")
	proto.RegisterType((*GetSimilarProductsBySkuResponse)(nil), "similarproducts.GetSimilarProductsBySkuResponse")
}

func init() { proto.RegisterFile("similarproducts.proto", fileDescriptor_ecca1bf6bea16d2b) }

var fileDescriptor_ecca1bf6bea16d2b = []byte{
	// 529 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x94, 0xcf, 0x6e, 0x13, 0x3d,
	0x14, 0xc5, 0xe5, 0x4e, 0xa7, 0x4d, 0x6e, 0xda, 0xa4, 0x9f, 0xf5, 0xb5, 0x58, 0x15, 0x2a, 0xa3,
	0x08, 0xa1, 0x59, 0xa0, 0x80, 0x02, 0x2f, 0xd0, 0x06, 0x09, 0x65, 0x81, 0x5a, 0xb9, 0x12, 0x0b,
	0x76, 0x66, 0x6c, 0x12, 0x2b, 0x89, 0x3d, 0xd8, 0x9e, 0x96, 0x48, 0xbc, 0x06, 0x4b, 0x9e, 0x82,
	0x87, 0x63, 0x8b, 0x6c, 0x4f, 0xf3, 0x67, 0xda, 0x22, 0x76, 0x39, 0x3f, 0xdf, 0xb1, 0xce, 0xbd,
	0xf7, 0xc4, 0x70, 0x6c, 0xe5, 0x42, 0xce, 0x99, 0x29, 0x8d, 0xe6, 0x55, 0xe1, 0xec, 0xa0, 0x34,
	0xda, 0x69, 0xdc, 0x6b, 0xe0, 0xfe, 0xef, 0x04, 0xf6, 0x3f, 0x32, 0x23, 0x99, 0x72, 0xb8, 0x0b,
	0x3b, 0x92, 0x13, 0x94, 0xa1, 0x3c, 0xa1, 0x3b, 0x92, 0xe3, 0xa7, 0xd0, 0xae, 0xeb, 0xc6, 0x9c,
	0xec, 0x04, 0xbc, 0x06, 0xfe, 0x54, 0xda, 0x77, 0xe2, 0x0b, 0xab, 0xe6, 0x8e, 0x24, 0x19, 0xca,
	0x5b, 0x74, 0x0d, 0xf0, 0x11, 0x24, 0x76, 0x56, 0x91, 0xdd, 0x0c, 0xe5, 0x6d, 0xea, 0x7f, 0xfa,
	0x7a, 0xab, 0x8d, 0xbb, 0x34, 0x5c, 0x18, 0x92, 0x66, 0x28, 0x4f, 0xe9, 0x1a, 0xe0, 0x33, 0x80,
	0x42, 0x5b, 0x77, 0xbe, 0xd0, 0x95, 0x72, 0x64, 0x2f, 0x43, 0x39, 0xa2, 0x1b, 0x04, 0xf7, 0xe1,
	0xc0, 0xab, 0x51, 0x65, 0x8c, 0x50, 0xc5, 0x92, 0xec, 0x87, 0x8b, 0xb7, 0x18, 0x7e, 0x01, 0x5d,
	0x67, 0x58, 0x31, 0x1b, 0xab, 0x1b, 0xa1, 0x9c, 0x36, 0x4b, 0xd2, 0x0a, 0xb6, 0x1a, 0x14, 0x3f,
	0x87, 0x43, 0xc7, 0xbe, 0x8d, 0x98, 0x13, 0x13, 0x6d, 0x96, 0x63, 0x4e, 0xda, 0xa1, 0xb7, 0x6d,
	0x88, 0x07, 0x80, 0xed, 0x54, 0x96, 0xa5, 0x54, 0x93, 0x8d, 0x52, 0x08, 0xa5, 0x0f, 0x9c, 0xf8,
	0x5b, 0xb9, 0xb4, 0x85, 0x56, 0x4e, 0xaa, 0x4a, 0x5c, 0x2a, 0xd2, 0x09, 0x16, 0xb7, 0x21, 0x3e,
	0x81, 0xbd, 0x5b, 0x21, 0x27, 0x53, 0x47, 0x0e, 0x42, 0x8f, 0xb5, 0xf2, 0x7c, 0x1a, 0xf9, 0x61,
	0xe4, 0x51, 0xe1, 0xff, 0x21, 0xbd, 0x95, 0xdc, 0x4d, 0x49, 0x37, 0xe0, 0x28, 0x3c, 0xe5, 0xa2,
	0x74, 0x53, 0xd2, 0x8b, 0x34, 0x08, 0xfc, 0x12, 0xd2, 0xd2, 0xc8, 0x42, 0x90, 0xa3, 0x0c, 0xe5,
	0x9d, 0xe1, 0xc9, 0xa0, 0x99, 0x81, 0x2b, 0x7f, 0x4a, 0x63, 0x51, 0xff, 0x17, 0x82, 0x34, 0x80,
	0x87, 0xf6, 0x7e, 0x13, 0x23, 0xb1, 0xde, 0xfb, 0x0a, 0x78, 0xa7, 0x2c, 0x6e, 0x29, 0x89, 0x4e,
	0xa3, 0xc2, 0x39, 0xf4, 0x0a, 0xbd, 0x28, 0x99, 0x11, 0xe7, 0x77, 0x6b, 0xdc, 0x0d, 0x05, 0x4d,
	0x8c, 0x4f, 0xa1, 0x55, 0xdc, 0xed, 0x31, 0x0d, 0x43, 0x5a, 0x69, 0x9f, 0x83, 0xca, 0x0a, 0x43,
	0xf5, 0x5c, 0x8c, 0x79, 0xc8, 0x41, 0x42, 0x37, 0x48, 0x7f, 0x08, 0x67, 0xef, 0x85, 0xbb, 0x8e,
	0x8d, 0x5d, 0xd5, 0x8d, 0x5d, 0x2c, 0xaf, 0x67, 0x15, 0x15, 0x5f, 0x2b, 0x61, 0x57, 0xc9, 0x43,
	0xab, 0xe4, 0xf5, 0x7f, 0x22, 0x78, 0xf6, 0xe8, 0x47, 0xb6, 0xd4, 0xca, 0x0a, 0xfc, 0x16, 0x5a,
	0x75, 0x8b, 0x96, 0xa0, 0x2c, 0xc9, 0x3b, 0x43, 0x72, 0x6f, 0x7c, 0xf5, 0xff, 0x84, 0xae, 0x2a,
	0xbd, 0x5b, 0xeb, 0x98, 0xab, 0xec, 0x48, 0x73, 0x51, 0x8f, 0x6a, 0x83, 0xf8, 0x4c, 0x44, 0xf5,
	0x41, 0x58, 0xcb, 0x26, 0x22, 0x8c, 0xac, 0x4d, 0xb7, 0xe1, 0xf0, 0x07, 0x82, 0xe3, 0x86, 0xb9,
	0xd1, 0x5c, 0x0a, 0xe5, 0xf0, 0x77, 0x78, 0xf2, 0x88, 0x71, 0xfc, 0xea, 0x9e, 0xbd, 0xbf, 0xcf,
	0xe5, 0xf4, 0xf5, 0xbf, 0x7f, 0x10, 0x67, 0x72, 0xf1, 0xdf, 0xa7, 0xe6, 0x73, 0xf1, 0x79, 0x2f,
	0x3c, 0x23, 0x6f, 0xfe, 0x04, 0x00, 0x00, 0xff, 0xff, 0xc9, 0xec, 0xa5, 0x03, 0x5f, 0x04, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SimilarProductsClientClient is the client API for SimilarProductsClient service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SimilarProductsClientClient interface {
	GetSimilarProductsBySku(ctx context.Context, in *GetSimilarProductsBySkuRequest, opts ...grpc.CallOption) (*GetSimilarProductsBySkuResponse, error)
}

type similarProductsClientClient struct {
	cc *grpc.ClientConn
}

func NewSimilarProductsClientClient(cc *grpc.ClientConn) SimilarProductsClientClient {
	return &similarProductsClientClient{cc}
}

func (c *similarProductsClientClient) GetSimilarProductsBySku(ctx context.Context, in *GetSimilarProductsBySkuRequest, opts ...grpc.CallOption) (*GetSimilarProductsBySkuResponse, error) {
	out := new(GetSimilarProductsBySkuResponse)
	err := c.cc.Invoke(ctx, "/similarproducts.SimilarProductsClient/GetSimilarProductsBySku", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SimilarProductsClientServer is the server API for SimilarProductsClient service.
type SimilarProductsClientServer interface {
	GetSimilarProductsBySku(context.Context, *GetSimilarProductsBySkuRequest) (*GetSimilarProductsBySkuResponse, error)
}

// UnimplementedSimilarProductsClientServer can be embedded to have forward compatible implementations.
type UnimplementedSimilarProductsClientServer struct {
}

func (*UnimplementedSimilarProductsClientServer) GetSimilarProductsBySku(ctx context.Context, req *GetSimilarProductsBySkuRequest) (*GetSimilarProductsBySkuResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSimilarProductsBySku not implemented")
}

func RegisterSimilarProductsClientServer(s *grpc.Server, srv SimilarProductsClientServer) {
	s.RegisterService(&_SimilarProductsClient_serviceDesc, srv)
}

func _SimilarProductsClient_GetSimilarProductsBySku_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSimilarProductsBySkuRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SimilarProductsClientServer).GetSimilarProductsBySku(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/similarproducts.SimilarProductsClient/GetSimilarProductsBySku",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SimilarProductsClientServer).GetSimilarProductsBySku(ctx, req.(*GetSimilarProductsBySkuRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SimilarProductsClient_serviceDesc = grpc.ServiceDesc{
	ServiceName: "similarproducts.SimilarProductsClient",
	HandlerType: (*SimilarProductsClientServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetSimilarProductsBySku",
			Handler:    _SimilarProductsClient_GetSimilarProductsBySku_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "similarproducts.proto",
}
