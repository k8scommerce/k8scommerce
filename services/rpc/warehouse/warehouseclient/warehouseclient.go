// Code generated by goctl. DO NOT EDIT!
// Source: warehouse.proto

package warehouseclient

import (
	"context"

	"github.com/k8scommerce/k8scommerce/services/rpc/client/pb/warehouse"

	"github.com/tal-tech/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CreateWarehouseRequest            = warehouse.CreateWarehouseRequest
	CreateWarehouseResponse           = warehouse.CreateWarehouseResponse
	GetAllWarehousesByStoreIdRequest  = warehouse.GetAllWarehousesByStoreIdRequest
	GetAllWarehousesByStoreIdResponse = warehouse.GetAllWarehousesByStoreIdResponse
	GetWarehouseByIdRequest           = warehouse.GetWarehouseByIdRequest
	GetWarehouseByIdResponse          = warehouse.GetWarehouseByIdResponse
	Warehouse                         = warehouse.Warehouse

	WarehouseClient interface {
		CreateWarehouse(ctx context.Context, in *CreateWarehouseRequest, opts ...grpc.CallOption) (*CreateWarehouseResponse, error)
		GetAllWarehousesByStoreId(ctx context.Context, in *GetAllWarehousesByStoreIdRequest, opts ...grpc.CallOption) (*GetAllWarehousesByStoreIdResponse, error)
		GetWarehouseById(ctx context.Context, in *GetWarehouseByIdRequest, opts ...grpc.CallOption) (*GetWarehouseByIdResponse, error)
	}

	defaultWarehouseClient struct {
		cli zrpc.Client
	}
)

func NewWarehouseClient(cli zrpc.Client) WarehouseClient {
	return &defaultWarehouseClient{
		cli: cli,
	}
}

func (m *defaultWarehouseClient) CreateWarehouse(ctx context.Context, in *CreateWarehouseRequest, opts ...grpc.CallOption) (*CreateWarehouseResponse, error) {
	client := warehouse.NewWarehouseClientClient(m.cli.Conn())
	return client.CreateWarehouse(ctx, in, opts...)
}

func (m *defaultWarehouseClient) GetAllWarehousesByStoreId(ctx context.Context, in *GetAllWarehousesByStoreIdRequest, opts ...grpc.CallOption) (*GetAllWarehousesByStoreIdResponse, error) {
	client := warehouse.NewWarehouseClientClient(m.cli.Conn())
	return client.GetAllWarehousesByStoreId(ctx, in, opts...)
}

func (m *defaultWarehouseClient) GetWarehouseById(ctx context.Context, in *GetWarehouseByIdRequest, opts ...grpc.CallOption) (*GetWarehouseByIdResponse, error) {
	client := warehouse.NewWarehouseClientClient(m.cli.Conn())
	return client.GetWarehouseById(ctx, in, opts...)
}
