// Code generated by goctl. DO NOT EDIT!
// Source: warehouse.proto

package server

import (
	"context"

	"github.com/k8scommerce/k8scommerce/services/rpc/warehouse/internal/logic"
	"github.com/k8scommerce/k8scommerce/services/rpc/warehouse/internal/svc"
	"github.com/k8scommerce/k8scommerce/services/rpc/warehouse/pb/warehouse"
)

type WarehouseClientServer struct {
	svcCtx *svc.ServiceContext
	warehouse.UnimplementedWarehouseClientServer
}

func NewWarehouseClientServer(svcCtx *svc.ServiceContext) *WarehouseClientServer {
	return &WarehouseClientServer{
		svcCtx: svcCtx,
	}
}

func (s *WarehouseClientServer) CreateWarehouse(ctx context.Context, in *warehouse.CreateWarehouseRequest) (*warehouse.CreateWarehouseResponse, error) {
	l := logic.NewCreateWarehouseLogic(ctx, s.svcCtx)
	return l.CreateWarehouse(in)
}

func (s *WarehouseClientServer) GetAllWarehousesByStoreId(ctx context.Context, in *warehouse.GetAllWarehousesByStoreIdRequest) (*warehouse.GetAllWarehousesByStoreIdResponse, error) {
	l := logic.NewGetAllWarehousesByStoreIdLogic(ctx, s.svcCtx)
	return l.GetAllWarehousesByStoreId(in)
}

func (s *WarehouseClientServer) GetWarehouseById(ctx context.Context, in *warehouse.GetWarehouseByIdRequest) (*warehouse.GetWarehouseByIdResponse, error) {
	l := logic.NewGetWarehouseByIdLogic(ctx, s.svcCtx)
	return l.GetWarehouseById(in)
}
