// Code generated by goctl. DO NOT EDIT!
// Source: othersbought.proto

package othersboughtclient

import (
	"context"

	"github.com/k8s-commerce/k8s-commerce/services/rpc/othersbought/pb/othersbought"

	"github.com/tal-tech/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GetOthersBoughtBySkuRequest  = othersbought.GetOthersBoughtBySkuRequest
	GetOthersBoughtBySkuResponse = othersbought.GetOthersBoughtBySkuResponse

	OthersBoughtClient interface {
		GetOthersBoughtBySku(ctx context.Context, in *GetOthersBoughtBySkuRequest, opts ...grpc.CallOption) (*GetOthersBoughtBySkuResponse, error)
	}

	defaultOthersBoughtClient struct {
		cli zrpc.Client
	}
)

func NewOthersBoughtClient(cli zrpc.Client) OthersBoughtClient {
	return &defaultOthersBoughtClient{
		cli: cli,
	}
}

func (m *defaultOthersBoughtClient) GetOthersBoughtBySku(ctx context.Context, in *GetOthersBoughtBySkuRequest, opts ...grpc.CallOption) (*GetOthersBoughtBySkuResponse, error) {
	client := othersbought.NewOthersBoughtClientClient(m.cli.Conn())
	return client.GetOthersBoughtBySku(ctx, in, opts...)
}
