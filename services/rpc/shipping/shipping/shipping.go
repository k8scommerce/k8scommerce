// Code generated by goctl. DO NOT EDIT!
// Source: shipping.proto

package shipping

import (
	"context"

	"github.com/k8s-commerce/k8s-commerce/services/rpc/shipping"

	"github.com/tal-tech/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	From             = shipping.From
	GetQuoteRequest  = shipping.GetQuoteRequest
	GetQuoteResponse = shipping.GetQuoteResponse
	To               = shipping.To

	Shipping interface {
		GetQuote(ctx context.Context, in *GetQuoteRequest, opts ...grpc.CallOption) (*GetQuoteResponse, error)
	}

	defaultShipping struct {
		cli zrpc.Client
	}
)

func NewShipping(cli zrpc.Client) Shipping {
	return &defaultShipping{
		cli: cli,
	}
}

func (m *defaultShipping) GetQuote(ctx context.Context, in *GetQuoteRequest, opts ...grpc.CallOption) (*GetQuoteResponse, error) {
	client := shipping.NewShippingClient(m.cli.Conn())
	return client.GetQuote(ctx, in, opts...)
}
