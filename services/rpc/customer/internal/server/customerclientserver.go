// Code generated by goctl. DO NOT EDIT!
// Source: customer.proto

package server

import (
	"context"

	"github.com/k8s-commerce/k8s-commerce/services/rpc/customer/internal/logic"
	"github.com/k8s-commerce/k8s-commerce/services/rpc/customer/internal/svc"
	"github.com/k8s-commerce/k8s-commerce/services/rpc/customer/pb/customer"

	"github.com/localrivet/galaxycache"
)

type CustomerClientServer struct {
	svcCtx   *svc.ServiceContext
	universe *galaxycache.Universe
}

func NewCustomerClientServer(svcCtx *svc.ServiceContext, universe *galaxycache.Universe) *CustomerClientServer {
	return &CustomerClientServer{
		svcCtx:   svcCtx,
		universe: universe,
	}
}

func (s *CustomerClientServer) CreateCustomer(ctx context.Context, in *customer.CreateCustomerRequest) (*customer.CreateCustomerResponse, error) {
	l := logic.NewCreateCustomerLogic(ctx, s.svcCtx, s.universe)
	return l.CreateCustomer(in)
}

func (s *CustomerClientServer) Login(ctx context.Context, in *customer.LoginRequest) (*customer.LoginResponse, error) {
	l := logic.NewLoginLogic(ctx, s.svcCtx, s.universe)
	return l.Login(in)
}
