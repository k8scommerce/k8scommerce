// Code generated by goctl. DO NOT EDIT!
// Source: user.proto

package server

import (
	"context"

	"k8scommerce/services/rpc/user/internal/logic"
	"k8scommerce/services/rpc/user/internal/svc"
	"k8scommerce/services/rpc/user/pb/user"
)

type UserClientServer struct {
	svcCtx *svc.ServiceContext
	user.UnimplementedUserClientServer
}

func NewUserClientServer(svcCtx *svc.ServiceContext) *UserClientServer {
	return &UserClientServer{
		svcCtx: svcCtx,
	}
}

func (s *UserClientServer) GetAllUsers(ctx context.Context, in *user.GetAllUsersRequest) (*user.GetAllUsersResponse, error) {
	l := logic.NewGetAllUsersLogic(ctx, s.svcCtx)
	return l.GetAllUsers(in)
}

func (s *UserClientServer) GetAllPermissionGroups(ctx context.Context, in *user.GetAllPermissionGroupsRequest) (*user.GetAllPermissionGroupsResponse, error) {
	l := logic.NewGetAllPermissionGroupsLogic(ctx, s.svcCtx)
	return l.GetAllPermissionGroups(in)
}

func (s *UserClientServer) CreateUser(ctx context.Context, in *user.CreateUserRequest) (*user.CreateUserResponse, error) {
	l := logic.NewCreateUserLogic(ctx, s.svcCtx)
	return l.CreateUser(in)
}

func (s *UserClientServer) Login(ctx context.Context, in *user.LoginRequest) (*user.LoginResponse, error) {
	l := logic.NewLoginLogic(ctx, s.svcCtx)
	return l.Login(in)
}
