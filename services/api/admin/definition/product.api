syntax = "v2"

// objects

type Product {
	Id               int64     `json:"id"`
	Slug             string    `json:"slug"`
	Name             string    `json:"name"`
	ShortDescription string    `json:"shortDescription"`
	Description      string    `json:"description"`
	MetaTitle        string    `json:"metaTitle,omitempty"`
	MetaDescription  string    `json:"metaDescription,omitempty"`
	MetaKeywords     string    `json:"metaKeywords,omitempty"`
	Variants         []Variant `json:"variants,omitempty"`
}

type Variant {
	Id        int64   `json:"id,omitempty"`
	IsDefault bool    `json:"isDefault,omitempty"`
	Sku       string  `json:"sku,omitempty"`
	Weight    float64 `json:"weight,omitempty"`
	Height    float64 `json:"height,omitempty"`
	Width     float64 `json:"width,omitempty"`
	Depth     float64 `json:"depth,omitempty"`
	Price     Price   `json:"price,omitempty"`
}

type Price {
	Id                     int64   `json:"id,omitempty"`
	Amount                 float64 `json:"amount,omitempty"`
	DisplayAmount          string  `json:"displayAmount,omitempty"`
	CompareAtAmount        float64 `json:"compareAtAmount,omitempty"`
	DisplayCompareAtAmount string  `json:"displayCompareAtAmount,omitempty"`
	Currency               string  `json:"currency,omitempty"`
}

//
// requests & responses
//

// get product by sku
type GetProductBySkuRequest {
	Sku string `path:"sku"`
}

// get product by slug
type GetProductBySlugRequest {
	Slug string `path:"slug"`
}

// get product by id
type GetProductByIdRequest {
	Id int64 `path:"id"`
}

// get products by category id
type GetProductsByCategoryIdRequest {
	CategoryId  int64  `path:"categoryId"`
	CurrentPage int64  `path:"currentPage"`
	PageSize    int64  `path:"pageSize"`
	SortOn      string `form:"sortOn,optional"`
}


type GetProductsByCategoryIdResponse {
	Products     []Product `json:"products"`
	TotalRecords int64     `json:"totalRecords"`
	TotalPages   int64     `json:"totalPages"`
}

// get all products
type GetAllProductsRequest {
	CurrentPage int64  `path:"currentPage"`
	PageSize    int64  `path:"pageSize"`
	SortOn      string `form:"sortOn"`
}

type GetAllProductsResponse {
	Products     []Product `json:"products"`
	TotalRecords int64     `json:"totalRecords"`
	TotalPages   int64     `json:"totalPages"`
}

//
// endpoints
//

@server(
	middleware: Locale
)
service client {
	@handler getProductBySkuRequest
	get /v1/product/sku/:sku(GetProductBySkuRequest) returns (Product)
	
	@handler getProductBySlugRequest
	get /v1/product/slug/:slug(GetProductBySlugRequest) returns (Product)
	
	@handler getProductByIdRequest
	get /v1/product/:id(GetProductByIdRequest) returns (Product)
	
	@handler getProductsByCategoryIdRequest
	get /v1/products/category/:categoryId/:currentPage/:pageSize(GetProductsByCategoryIdRequest) returns (GetProductsByCategoryIdResponse)
	
	@handler getAllProductsRequest
	get /v1/products/:currentPage/:pageSize(GetAllProductsRequest) returns (GetAllProductsResponse)
	
	// post CreateProduct(CreateProductRequest) returns (CreateProductResponse);
	// put UpdateProduct(UpdateProductRequest) returns (UpdateProductResponse);
	// delete DeleteProduct(DeleteProductRequest) returns (DeleteProductResponse);
}