// Code generated by goctl. DO NOT EDIT.
package types

type JwtToken struct {
	AccessToken  string `json:"access_token"`
	AccessExpire int64  `json:"access_expire"`
	RefreshAfter int64  `json:"refresh_after"`
}

type Cart struct {
	Item       []Item  `json:"items"`
	TotalPrice float64 `json:"totalPrice"`
}

type Item struct {
	Sku       string  `json:"variantId"`
	Quantity  int32   `json:"quantity"`
	Price     float64 `json:"price"`
	ExpiresAt string  `json:"expiresAt"`
}

type GetCartRequest struct {
	UserId string `path:"userId"`
}

type GetCartResponse struct {
	Cart          Cart   `json:"cart"`
	StatusCode    int64  `json:"sessionId"`
	StatusMessage string `json:"sessionId"`
}

type CreateCartRequest struct {
}

type CreateCartResponse struct {
	Cart          Cart   `json:"cart"`
	StatusCode    int64  `json:"sessionId"`
	StatusMessage string `json:"sessionId"`
}

type AddItemToCartRequest struct {
	UserId int64 `json:"userId"`
	Item   Item  `json:"item"`
}

type AddItemToCartResponse struct {
	Cart          Cart   `json:"cart"`
	StatusCode    int64  `json:"sessionId"`
	StatusMessage string `json:"sessionId"`
}

type UpdateCartItemRequest struct {
	ProductId int64 `json:"productId"`
	VariantId int64 `json:"variantId"`
	Quanity   int32 `json:"quanity"`
}

type UpdateCartItemResponse struct {
	Cart          Cart   `json:"cart"`
	StatusCode    int64  `json:"statusCode"`
	StatusMessage string `json:"statusMessage"`
}

type RemoveCartItemRequest struct {
	ProductId int64 `json:"productId"`
	VariantId int64 `json:"variantId"`
	Quanity   int32 `json:"quanity"`
}

type RemoveCartItemResponse struct {
	Cart          Cart   `json:"cart"`
	StatusCode    int64  `json:"statusCode"`
	StatusMessage string `json:"statusMessage"`
}

type ClearCartRequest struct {
}

type ClearCartResponse struct {
	StatusCode    int64  `json:"statusCode"`
	StatusMessage string `json:"statusMessage"`
}

type Customer struct {
	Id        int64  `json:"id"`
	FirstName string `json:"firstName"`
	LastName  string `json:"lastName"`
	Email     string `json:"email"`
	Password  string `json:"password,omitempty"`
}

type CustomerLoginRequest struct {
	Customername string `json:"customername"`
	Password     string `json:"password"`
}

type CustomerLoginResponse struct {
	JwtToken      JwtToken `json:"jwt"`
	Customer      Customer `json:"customer"`
	StatusCode    int64    `json:"statusCode"`
	StatusMessage string   `json:"statusMessage"`
}

type Product struct {
	Id               int64     `json:"id"`
	Slug             string    `json:"slug"`
	Name             string    `json:"name"`
	ShortDescription string    `json:"shortDescription"`
	Description      string    `json:"description"`
	MetaTitle        string    `json:"metaTitle,omitempty"`
	MetaDescription  string    `json:"metaDescription,omitempty"`
	MetaKeywords     string    `json:"metaKeywords,omitempty"`
	Variants         []Variant `json:"variants,omitempty"`
}

type Variant struct {
	Id        int64   `json:"id,omitempty"`
	IsDefault bool    `json:"isDefault,omitempty"`
	Sku       string  `json:"sku,omitempty"`
	Weight    float64 `json:"weight,omitempty"`
	Height    float64 `json:"height,omitempty"`
	Width     float64 `json:"width,omitempty"`
	Depth     float64 `json:"depth,omitempty"`
	Price     Price   `json:"price,omitempty"`
}

type Price struct {
	Id                     int64   `json:"id,omitempty"`
	Amount                 float64 `json:"amount,omitempty"`
	DisplayAmount          string  `json:"displayAmount,omitempty"`
	CompareAtAmount        float64 `json:"compareAtAmount,omitempty"`
	DisplayCompareAtAmount string  `json:"displayCompareAtAmount,omitempty"`
	Currency               string  `json:"currency,omitempty"`
}

type GetProductBySkuRequest struct {
	Sku string `path:"sku"`
}

type GetProductBySlugRequest struct {
	Slug string `path:"slug"`
}

type GetProductByIdRequest struct {
	Id int64 `path:"id"`
}

type GetProductsByCategoryIdRequest struct {
	CategoryId  int64  `path:"categoryId"`
	CurrentPage int64  `path:"currentPage"`
	PageSize    int64  `path:"pageSize"`
	SortOn      string `form:"sortOn,optional"`
}

type GetProductsByCategoryIdResponse struct {
	Products     []Product `json:"products"`
	TotalRecords int64     `json:"totalRecords"`
	TotalPages   int64     `json:"totalPages"`
}

type GetAllProductsRequest struct {
	CurrentPage int64  `path:"currentPage"`
	PageSize    int64  `path:"pageSize"`
	SortOn      string `form:"sortOn"`
}

type GetAllProductsResponse struct {
	Products     []Product `json:"products"`
	TotalRecords int64     `json:"totalRecords"`
	TotalPages   int64     `json:"totalPages"`
}
