# If you like docker-compose, and like having postgres and pgAdmin in containers vs installed locally,
# then `docker pull postgres` and `docker pull dpage/pgadmin4`
# and finally `docker-compose -f path/to/this/or/similar/file.yml up` and you're set for local dev!
# If you've already composed and just need to start the containers, `docker-compose -f path/to/this/or/similar/file.yml start`

version: "3"
services:
  postgres:
    container_name: localrivet-db
    image: postgis/postgis:12-master
    hostname: postgres
    ports:
      # host : container
      - "54322:5432"
    networks:
      - ecomm
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: localrivet
    volumes:
      # Host env file for persistent data storage, change as desired
      - $HOME/docker/volumes/localrivet:/var/lib/postgresql/data
    restart: unless-stopped
    #### üê≤ ONLY UNCOMMENT THE BELOW IF YOU WANT TO FORCE OOM TYPE SCENARIOS!!! üê≤ ####
    # mem_limit: 32m        ## 32m is minimum allowable
    # mem_swappiness: 0
    # memswap_limit: 33m    ## Has to be higher than mem_limit
    # cpus: 0.5
  migrations:
    build: .
    # image: comp-migrations:latest
    depends_on:
      - postgres
    environment:
      PGUSER: postgres
      PGPASSWORD: postgres
      PGDATABASE: localrivet
      PGHOST: postgres
      PGSSLMODE: disable
    volumes:
      - ./migrations:/migrations
    networks:
      - ecomm
    command: [ "/wait-for-postgres.sh", "/run-migrations.sh" ]

  # pgAdmin is a really nice system for working w/ postgres: https://www.pgadmin.org/
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:6.3
    depends_on:
      - postgres
    ports:
      # host : container
      - "5428:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: postgres@foo.com
      PGADMIN_DEFAULT_PASSWORD: postgres
    networks:
      - ecomm
    restart: unless-stopped

networks:
  ecomm:
    driver: bridge
